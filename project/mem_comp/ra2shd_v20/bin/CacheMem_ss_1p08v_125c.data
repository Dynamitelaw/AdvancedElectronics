/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2019  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Dual Port SRAM Generator
 *           			IBM CMRF8SF-LPVT Process
 *      version:		2009Q1V1
 *      comment:		
 *      configuration:	 -instname CacheMem -words 256 -bits 32 -frequency 1000 -ring_width 4.0 -mux 8 -write_mask off -wp_size 8 -top_layer "met5-8" -power_type rings -horiz met3 -vert met4 -cust_comment "" -bus_notation on -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,GND:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -drive 6 -dpccm on -asvm on -corners ff_1p32v_m40c,ff_1p65v_125c,tt_1p2v_25c,ss_1p08v_125c
 *
 *      Synopsys model for Synchronous Dual-Port Ram
 *
 *      Library Name:   aci
 *      Instance Name:  CacheMem
 *      Words:          256
 *      Word Width:     32
 *      Mux:            8
 *      Process:        ss_1p08v_125c
 *
 *      Creation Date:  2019-05-01 00:28:10Z
 *      Version:        2009Q1V1
 *
 *      Verified With: Synopsys Primetime
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.
 *          Different modes are defined in order to disable false path
 *          during the specific mode activation when doing static timing analysis. 
 *
 *
 *      Modeling Limitations: This stamp does not include power information.
 *          Due to limitations of the stamp modeling, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

MODELDATA
OPERATING_CONDITION "ss_1p08v_125c";
DESIGN              "CacheMem";

CELLDATA
area                   : 125758.368;
default_max_transition : 1.500;
ENDCELLDATA

PORTDATA
QA[31:0] : MAXCAP(0.860);
AA[7:0] : CAP(0.017);
DA[31:0] : CAP(0.001);
CLKA : CAP(0.133), MAXTRANS(1.500);
WENA : CAP(0.008);
CENA : CAP(0.008);
QB[31:0] : MAXCAP(0.860);
AB[7:0] : CAP(0.017);
DB[31:0] : CAP(0.001);
CLKB : CAP(0.133), MAXTRANS(1.500);
WENB : CAP(0.008);
CENB : CAP(0.008);
ENDPORTDATA

TIMINGDATA
GLOBAL
        lu_table_template(CacheMem_bist_mux_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        lu_table_template(CacheMem_mux_mem_out_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        lu_table_template(CacheMem_mem_out_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(CacheMem_bist_mux_slew_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(CacheMem_mem_out_slew_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(CacheMem_clk_setup_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(CacheMem_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
ENDGLOBAL
ARCDATA
setup_a_A:
                        rise_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.778, 1.790, 1.805, 1.835, 1.925, 2.075, 2.225", \
                          "1.762, 1.774, 1.789, 1.819, 1.909, 2.059, 2.209", \
                          "1.742, 1.754, 1.769, 1.799, 1.889, 2.039, 2.189", \
                          "1.702, 1.714, 1.729, 1.759, 1.849, 1.999, 2.150", \
                          "1.583, 1.595, 1.610, 1.640, 1.730, 1.880, 2.030", \
                          "1.385, 1.397, 1.412, 1.442, 1.532, 1.682, 1.832", \
                          "1.186, 1.198, 1.213, 1.243, 1.333, 1.483, 1.633" \
                        )
                        }
                        fall_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.077, 1.088, 1.102, 1.130, 1.214, 1.355, 1.495", \
                          "1.061, 1.072, 1.086, 1.114, 1.198, 1.339, 1.479", \
                          "1.041, 1.052, 1.066, 1.094, 1.179, 1.319, 1.459", \
                          "1.001, 1.013, 1.027, 1.055, 1.139, 1.279, 1.419", \
                          "0.882, 0.893, 0.907, 0.935, 1.020, 1.160, 1.300", \
                          "0.684, 0.695, 0.709, 0.737, 0.821, 0.961, 1.102", \
                          "0.485, 0.496, 0.510, 0.538, 0.622, 0.763, 0.903" \
                        )
                        }
ENDARCDATA
ARCDATA
hold_a_A:
                        rise_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.416, 0.404, 0.389, 0.359, 0.269, 0.230, 0.230" \
                        )
                        }
                        fall_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.273, 0.261, 0.247, 0.230, 0.230, 0.230, 0.230", \
                          "0.471, 0.460, 0.446, 0.418, 0.334, 0.230, 0.230", \
                          "0.670, 0.659, 0.645, 0.617, 0.532, 0.392, 0.252" \
                        )
                        }
ENDARCDATA
ARCDATA
setup_d_A:
                        rise_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.561, 1.574, 1.590, 1.623, 1.723, 1.888, 2.053", \
                          "1.545, 1.558, 1.574, 1.607, 1.707, 1.872, 2.038", \
                          "1.525, 1.538, 1.555, 1.588, 1.687, 1.852, 2.018", \
                          "1.485, 1.498, 1.515, 1.548, 1.647, 1.813, 1.978", \
                          "1.366, 1.379, 1.396, 1.429, 1.528, 1.693, 1.859", \
                          "1.167, 1.180, 1.197, 1.230, 1.329, 1.495, 1.660", \
                          "0.969, 0.982, 0.998, 1.031, 1.131, 1.296, 1.462" \
                        )
                        }
                        fall_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.759, 1.774, 1.792, 1.829, 1.939, 2.123, 2.306", \
                          "1.743, 1.758, 1.776, 1.813, 1.923, 2.107, 2.290", \
                          "1.724, 1.738, 1.757, 1.793, 1.903, 2.087, 2.270", \
                          "1.684, 1.698, 1.717, 1.754, 1.864, 2.047, 2.231", \
                          "1.565, 1.579, 1.598, 1.634, 1.744, 1.928, 2.111", \
                          "1.366, 1.381, 1.399, 1.436, 1.546, 1.729, 1.913", \
                          "1.167, 1.182, 1.200, 1.237, 1.347, 1.531, 1.714" \
                        )
                        }
ENDARCDATA
ARCDATA
hold_d_A:
                        rise_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630" \
                        )
                        }
                        fall_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.668, 0.653, 0.635, 0.630, 0.630, 0.630, 0.630", \
                          "0.866, 0.852, 0.833, 0.797, 0.687, 0.630, 0.630" \
                        )
                        }
ENDARCDATA
ARCDATA
setup_cen_A:
                        rise_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "2.140, 2.156, 2.176, 2.216, 2.335, 2.534, 2.733", \
                          "2.124, 2.140, 2.160, 2.200, 2.319, 2.518, 2.718", \
                          "2.104, 2.120, 2.140, 2.180, 2.300, 2.499, 2.698", \
                          "2.065, 2.081, 2.101, 2.140, 2.260, 2.459, 2.658", \
                          "1.945, 1.961, 1.981, 2.021, 2.141, 2.340, 2.539", \
                          "1.747, 1.763, 1.783, 1.823, 1.942, 2.141, 2.340", \
                          "1.548, 1.564, 1.584, 1.624, 1.743, 1.943, 2.142" \
                        )
                        }
                        fall_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.866, 1.879, 1.895, 1.927, 2.022, 2.182, 2.341", \
                          "1.851, 1.863, 1.879, 1.911, 2.007, 2.166, 2.325", \
                          "1.831, 1.843, 1.859, 1.891, 1.987, 2.146, 2.305", \
                          "1.791, 1.804, 1.820, 1.851, 1.947, 2.106, 2.265", \
                          "1.672, 1.685, 1.700, 1.732, 1.828, 1.987, 2.146", \
                          "1.473, 1.486, 1.502, 1.534, 1.629, 1.788, 1.947", \
                          "1.275, 1.287, 1.303, 1.335, 1.431, 1.590, 1.749" \
                        )
                        }
ENDARCDATA
ARCDATA
hold_cen_A:
                        rise_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.617, 0.601, 0.582, 0.542, 0.500, 0.500, 0.500" \
                        )
                        }
                        fall_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500" \
                        )
                        }
ENDARCDATA
ARCDATA
setup_wen_A:
                        rise_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "2.414, 2.431, 2.453, 2.495, 2.624, 2.837, 3.050", \
                          "2.398, 2.416, 2.437, 2.480, 2.608, 2.821, 3.034", \
                          "2.379, 2.396, 2.417, 2.460, 2.588, 2.801, 3.015", \
                          "2.339, 2.356, 2.377, 2.420, 2.548, 2.761, 2.975", \
                          "2.220, 2.237, 2.258, 2.301, 2.429, 2.642, 2.856", \
                          "2.021, 2.038, 2.060, 2.102, 2.230, 2.444, 2.657", \
                          "1.822, 1.840, 1.861, 1.904, 2.032, 2.245, 2.458" \
                        )
                        }
                        fall_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "2.439, 2.452, 2.469, 2.503, 2.603, 2.771, 2.938", \
                          "2.423, 2.437, 2.453, 2.487, 2.587, 2.755, 2.922", \
                          "2.403, 2.417, 2.433, 2.467, 2.567, 2.735, 2.902", \
                          "2.364, 2.377, 2.394, 2.427, 2.528, 2.695, 2.862", \
                          "2.244, 2.258, 2.275, 2.308, 2.408, 2.576, 2.743", \
                          "2.046, 2.059, 2.076, 2.109, 2.210, 2.377, 2.545", \
                          "1.847, 1.861, 1.877, 1.911, 2.011, 2.179, 2.346" \
                        )
                        }
ENDARCDATA
ARCDATA
hold_wen_A:
                        rise_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630" \
                        )
                        }
                        fall_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630" \
                        )
                        }
ENDARCDATA


ARCDATA
period_clk_0_A:
                        rise_constraint(scalar) {
                                values ("6.179")
                        }
                        fall_constraint(scalar) {
                                values ("6.179")
                        }
ENDARCDATA
ARCDATA
pulsewidth_clk_h_0_A:
                        rise_constraint(scalar) {
                                values ("0.422")
                        }
                        fall_constraint(scalar) {
                                values ("0.422")
                        }
ENDARCDATA
ARCDATA
pulsewidth_clk_l_0_A:
                        rise_constraint(scalar) {
                                values ("0.700")
                        }
                        fall_constraint(scalar) {
                                values ("0.700")
                        }
ENDARCDATA
ARCDATA
dly_clk_q_0_A:
                        cell_rise(CacheMem_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ( \
                          "6.383, 6.466, 6.549, 6.716, 7.160, 7.936, 8.769", \
                          "6.399, 6.482, 6.565, 6.731, 7.175, 7.952, 8.785", \
                          "6.418, 6.502, 6.585, 6.751, 7.195, 7.972, 8.805", \
                          "6.458, 6.541, 6.625, 6.791, 7.235, 8.012, 8.844", \
                          "6.577, 6.661, 6.744, 6.910, 7.354, 8.131, 8.963", \
                          "6.776, 6.859, 6.942, 7.109, 7.553, 8.330, 9.162", \
                          "6.974, 7.058, 7.141, 7.307, 7.751, 8.528, 9.361" \
                        )
                        }
                        rise_transition(CacheMem_mem_out_slew_template) {
                        index_1 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ("0.103, 0.260, 0.418, 0.734, 1.576, 3.049, 4.627")
                        }
                        cell_fall(CacheMem_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ( \
                          "6.599, 6.659, 6.718, 6.838, 7.157, 7.716, 8.315", \
                          "6.615, 6.674, 6.734, 6.854, 7.173, 7.732, 8.331", \
                          "6.634, 6.694, 6.754, 6.874, 7.193, 7.752, 8.350", \
                          "6.674, 6.734, 6.794, 6.914, 7.233, 7.792, 8.390", \
                          "6.793, 6.853, 6.913, 7.033, 7.352, 7.911, 8.509", \
                          "6.992, 7.052, 7.112, 7.231, 7.551, 8.109, 8.708", \
                          "7.191, 7.250, 7.310, 7.430, 7.749, 8.308, 8.907" \
                        )
                        }
                        fall_transition(CacheMem_mem_out_slew_template) {
                        index_1 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ("0.134, 0.248, 0.363, 0.591, 1.201, 2.268, 3.411")
                        }
ENDARCDATA
ARCDATA
setup_a_B:
                        rise_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.778, 1.790, 1.805, 1.835, 1.925, 2.075, 2.225", \
                          "1.762, 1.774, 1.789, 1.819, 1.909, 2.059, 2.209", \
                          "1.742, 1.754, 1.769, 1.799, 1.889, 2.039, 2.189", \
                          "1.702, 1.714, 1.729, 1.759, 1.849, 1.999, 2.150", \
                          "1.583, 1.595, 1.610, 1.640, 1.730, 1.880, 2.030", \
                          "1.385, 1.397, 1.412, 1.442, 1.532, 1.682, 1.832", \
                          "1.186, 1.198, 1.213, 1.243, 1.333, 1.483, 1.633" \
                        )
                        }
                        fall_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.077, 1.088, 1.102, 1.130, 1.214, 1.355, 1.495", \
                          "1.061, 1.072, 1.086, 1.114, 1.198, 1.339, 1.479", \
                          "1.041, 1.052, 1.066, 1.094, 1.179, 1.319, 1.459", \
                          "1.001, 1.013, 1.027, 1.055, 1.139, 1.279, 1.419", \
                          "0.882, 0.893, 0.907, 0.935, 1.020, 1.160, 1.300", \
                          "0.684, 0.695, 0.709, 0.737, 0.821, 0.961, 1.102", \
                          "0.485, 0.496, 0.510, 0.538, 0.622, 0.763, 0.903" \
                        )
                        }
ENDARCDATA
ARCDATA
hold_a_B:
                        rise_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.416, 0.404, 0.389, 0.359, 0.269, 0.230, 0.230" \
                        )
                        }
                        fall_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.230, 0.230, 0.230, 0.230, 0.230, 0.230, 0.230", \
                          "0.273, 0.261, 0.247, 0.230, 0.230, 0.230, 0.230", \
                          "0.471, 0.460, 0.446, 0.418, 0.334, 0.230, 0.230", \
                          "0.670, 0.659, 0.645, 0.617, 0.532, 0.392, 0.252" \
                        )
                        }
ENDARCDATA
ARCDATA
setup_d_B:
                        rise_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.561, 1.574, 1.590, 1.623, 1.723, 1.888, 2.053", \
                          "1.545, 1.558, 1.574, 1.607, 1.707, 1.872, 2.038", \
                          "1.525, 1.538, 1.555, 1.588, 1.687, 1.852, 2.018", \
                          "1.485, 1.498, 1.515, 1.548, 1.647, 1.813, 1.978", \
                          "1.366, 1.379, 1.396, 1.429, 1.528, 1.693, 1.859", \
                          "1.167, 1.180, 1.197, 1.230, 1.329, 1.495, 1.660", \
                          "0.969, 0.982, 0.998, 1.031, 1.131, 1.296, 1.462" \
                        )
                        }
                        fall_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.759, 1.774, 1.792, 1.829, 1.939, 2.123, 2.306", \
                          "1.743, 1.758, 1.776, 1.813, 1.923, 2.107, 2.290", \
                          "1.724, 1.738, 1.757, 1.793, 1.903, 2.087, 2.270", \
                          "1.684, 1.698, 1.717, 1.754, 1.864, 2.047, 2.231", \
                          "1.565, 1.579, 1.598, 1.634, 1.744, 1.928, 2.111", \
                          "1.366, 1.381, 1.399, 1.436, 1.546, 1.729, 1.913", \
                          "1.167, 1.182, 1.200, 1.237, 1.347, 1.531, 1.714" \
                        )
                        }
ENDARCDATA
ARCDATA
hold_d_B:
                        rise_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630" \
                        )
                        }
                        fall_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.668, 0.653, 0.635, 0.630, 0.630, 0.630, 0.630", \
                          "0.866, 0.852, 0.833, 0.797, 0.687, 0.630, 0.630" \
                        )
                        }
ENDARCDATA
ARCDATA
setup_cen_B:
                        rise_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "2.140, 2.156, 2.176, 2.216, 2.335, 2.534, 2.733", \
                          "2.124, 2.140, 2.160, 2.200, 2.319, 2.518, 2.718", \
                          "2.104, 2.120, 2.140, 2.180, 2.300, 2.499, 2.698", \
                          "2.065, 2.081, 2.101, 2.140, 2.260, 2.459, 2.658", \
                          "1.945, 1.961, 1.981, 2.021, 2.141, 2.340, 2.539", \
                          "1.747, 1.763, 1.783, 1.823, 1.942, 2.141, 2.340", \
                          "1.548, 1.564, 1.584, 1.624, 1.743, 1.943, 2.142" \
                        )
                        }
                        fall_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "1.866, 1.879, 1.895, 1.927, 2.022, 2.182, 2.341", \
                          "1.851, 1.863, 1.879, 1.911, 2.007, 2.166, 2.325", \
                          "1.831, 1.843, 1.859, 1.891, 1.987, 2.146, 2.305", \
                          "1.791, 1.804, 1.820, 1.851, 1.947, 2.106, 2.265", \
                          "1.672, 1.685, 1.700, 1.732, 1.828, 1.987, 2.146", \
                          "1.473, 1.486, 1.502, 1.534, 1.629, 1.788, 1.947", \
                          "1.275, 1.287, 1.303, 1.335, 1.431, 1.590, 1.749" \
                        )
                        }
ENDARCDATA
ARCDATA
hold_cen_B:
                        rise_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.617, 0.601, 0.582, 0.542, 0.500, 0.500, 0.500" \
                        )
                        }
                        fall_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500", \
                          "0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500" \
                        )
                        }
ENDARCDATA
ARCDATA
setup_wen_B:
                        rise_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "2.414, 2.431, 2.453, 2.495, 2.624, 2.837, 3.050", \
                          "2.398, 2.416, 2.437, 2.480, 2.608, 2.821, 3.034", \
                          "2.379, 2.396, 2.417, 2.460, 2.588, 2.801, 3.015", \
                          "2.339, 2.356, 2.377, 2.420, 2.548, 2.761, 2.975", \
                          "2.220, 2.237, 2.258, 2.301, 2.429, 2.642, 2.856", \
                          "2.021, 2.038, 2.060, 2.102, 2.230, 2.444, 2.657", \
                          "1.822, 1.840, 1.861, 1.904, 2.032, 2.245, 2.458" \
                        )
                        }
                        fall_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "2.439, 2.452, 2.469, 2.503, 2.603, 2.771, 2.938", \
                          "2.423, 2.437, 2.453, 2.487, 2.587, 2.755, 2.922", \
                          "2.403, 2.417, 2.433, 2.467, 2.567, 2.735, 2.902", \
                          "2.364, 2.377, 2.394, 2.427, 2.528, 2.695, 2.862", \
                          "2.244, 2.258, 2.275, 2.308, 2.408, 2.576, 2.743", \
                          "2.046, 2.059, 2.076, 2.109, 2.210, 2.377, 2.545", \
                          "1.847, 1.861, 1.877, 1.911, 2.011, 2.179, 2.346" \
                        )
                        }
ENDARCDATA
ARCDATA
hold_wen_B:
                        rise_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630" \
                        )
                        }
                        fall_constraint(CacheMem_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630", \
                          "0.630, 0.630, 0.630, 0.630, 0.630, 0.630, 0.630" \
                        )
                        }
ENDARCDATA


ARCDATA
period_clk_0_B:
                        rise_constraint(scalar) {
                                values ("6.179")
                        }
                        fall_constraint(scalar) {
                                values ("6.179")
                        }
ENDARCDATA
ARCDATA
pulsewidth_clk_h_0_B:
                        rise_constraint(scalar) {
                                values ("0.422")
                        }
                        fall_constraint(scalar) {
                                values ("0.422")
                        }
ENDARCDATA
ARCDATA
pulsewidth_clk_l_0_B:
                        rise_constraint(scalar) {
                                values ("0.700")
                        }
                        fall_constraint(scalar) {
                                values ("0.700")
                        }
ENDARCDATA
ARCDATA
dly_clk_q_0_B:
                        cell_rise(CacheMem_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ( \
                          "6.383, 6.466, 6.549, 6.716, 7.160, 7.936, 8.769", \
                          "6.399, 6.482, 6.565, 6.731, 7.175, 7.952, 8.785", \
                          "6.418, 6.502, 6.585, 6.751, 7.195, 7.972, 8.805", \
                          "6.458, 6.541, 6.625, 6.791, 7.235, 8.012, 8.844", \
                          "6.577, 6.661, 6.744, 6.910, 7.354, 8.131, 8.963", \
                          "6.776, 6.859, 6.942, 7.109, 7.553, 8.330, 9.162", \
                          "6.974, 7.058, 7.141, 7.307, 7.751, 8.528, 9.361" \
                        )
                        }
                        rise_transition(CacheMem_mem_out_slew_template) {
                        index_1 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ("0.103, 0.260, 0.418, 0.734, 1.576, 3.049, 4.627")
                        }
                        cell_fall(CacheMem_mem_out_delay_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ( \
                          "6.599, 6.659, 6.718, 6.838, 7.157, 7.716, 8.315", \
                          "6.615, 6.674, 6.734, 6.854, 7.173, 7.732, 8.331", \
                          "6.634, 6.694, 6.754, 6.874, 7.193, 7.752, 8.350", \
                          "6.674, 6.734, 6.794, 6.914, 7.233, 7.792, 8.390", \
                          "6.793, 6.853, 6.913, 7.033, 7.352, 7.911, 8.509", \
                          "6.992, 7.052, 7.112, 7.231, 7.551, 8.109, 8.708", \
                          "7.191, 7.250, 7.310, 7.430, 7.749, 8.308, 8.907" \
                        )
                        }
                        fall_transition(CacheMem_mem_out_slew_template) {
                        index_1 ("0.000, 0.030, 0.060, 0.120, 0.280, 0.560, 0.860");
                        values ("0.134, 0.248, 0.363, 0.591, 1.201, 2.268, 3.411")
                        }
ENDARCDATA
ARCDATA
cont_cc_A:
                        rise_constraint(CacheMem_clk_setup_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615" \
                        )
                        }
                        fall_constraint(CacheMem_clk_setup_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615" \
                        )
                        }
ENDARCDATA
ARCDATA
cont_cc_B:
                        rise_constraint(CacheMem_clk_setup_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615" \
                        )
                        }
                        fall_constraint(CacheMem_clk_setup_constraint_template) {
                        index_1 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        index_2 ("0.010, 0.050, 0.100, 0.200, 0.500, 1.000, 1.500");
                        values ( \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615", \
                          "4.615, 4.615, 4.615, 4.615, 4.615, 4.615, 4.615" \
                        )
                        }
ENDARCDATA
ENDTIMINGDATA
ENDMODELDATA
