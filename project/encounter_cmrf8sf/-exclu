/*
###############################################################
#  Generated by:      Cadence Encounter 14.23-s044_1
#  OS:                Linux x86_64(Host ID cadpc42)
#  Generated on:      Wed Feb 27 22:12:08 2019
#  Design:            lfsr1
#  Command:           saveNetlist -phys -exclu
###############################################################
*/
module CLKINVX16TS (
	Y, 
	A, 
	VDD, 
	VSS);
   output Y;
   input A;
   inout VDD;
   inout VSS;
endmodule

module DFFRXLTS (
	RN, 
	QN, 
	Q, 
	D, 
	CK, 
	VDD, 
	VSS);
   input RN;
   output QN;
   output Q;
   input D;
   input CK;
   inout VDD;
   inout VSS;
endmodule

module XOR2XLTS (
	Y, 
	B, 
	A, 
	VDD, 
	VSS);
   output Y;
   input B;
   input A;
   inout VDD;
   inout VSS;
endmodule

module XNOR2X1TS (
	Y, 
	B, 
	A, 
	VDD, 
	VSS);
   output Y;
   input B;
   input A;
   inout VDD;
   inout VSS;
endmodule

module lfsr1 (
	clk, 
	resetn, 
	lfsr_out, 
	VDD, 
	VSS);
   input clk;
   input resetn;
   output [27:0] lfsr_out;
   inout VDD;
   inout VSS;

   // Internal wires
   wire clk__L1_N0;
   wire n3;
   wire n6;
   wire n7;

   // Module instantiations
   CLKINVX16TS clk__L1_I0 (
	.Y(clk__L1_N0),
	.A(clk), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[1]  (
	.RN(resetn),
	.Q(lfsr_out[1]),
	.D(lfsr_out[0]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[2]  (
	.RN(resetn),
	.Q(lfsr_out[2]),
	.D(lfsr_out[1]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[3]  (
	.RN(resetn),
	.Q(lfsr_out[3]),
	.D(lfsr_out[2]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[4]  (
	.RN(resetn),
	.Q(lfsr_out[4]),
	.D(lfsr_out[3]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[5]  (
	.RN(resetn),
	.Q(lfsr_out[5]),
	.D(lfsr_out[4]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[6]  (
	.RN(resetn),
	.Q(lfsr_out[6]),
	.D(lfsr_out[5]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[7]  (
	.RN(resetn),
	.Q(lfsr_out[7]),
	.D(lfsr_out[6]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[8]  (
	.RN(resetn),
	.Q(lfsr_out[8]),
	.D(lfsr_out[7]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[9]  (
	.RN(resetn),
	.Q(lfsr_out[9]),
	.D(lfsr_out[8]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[10]  (
	.RN(resetn),
	.Q(lfsr_out[10]),
	.D(lfsr_out[9]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[11]  (
	.RN(resetn),
	.Q(lfsr_out[11]),
	.D(lfsr_out[10]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[12]  (
	.RN(resetn),
	.Q(lfsr_out[12]),
	.D(lfsr_out[11]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[13]  (
	.RN(resetn),
	.Q(lfsr_out[13]),
	.D(lfsr_out[12]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[14]  (
	.RN(resetn),
	.Q(lfsr_out[14]),
	.D(lfsr_out[13]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[15]  (
	.RN(resetn),
	.Q(lfsr_out[15]),
	.D(lfsr_out[14]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[17]  (
	.RN(resetn),
	.Q(lfsr_out[17]),
	.D(lfsr_out[16]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[18]  (
	.RN(resetn),
	.Q(lfsr_out[18]),
	.D(lfsr_out[17]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[19]  (
	.RN(resetn),
	.Q(lfsr_out[19]),
	.D(lfsr_out[18]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[20]  (
	.RN(resetn),
	.Q(lfsr_out[20]),
	.D(lfsr_out[19]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[21]  (
	.RN(resetn),
	.Q(lfsr_out[21]),
	.D(lfsr_out[20]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[22]  (
	.RN(resetn),
	.Q(lfsr_out[22]),
	.D(lfsr_out[21]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[24]  (
	.RN(resetn),
	.Q(lfsr_out[24]),
	.D(lfsr_out[23]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[25]  (
	.RN(resetn),
	.Q(lfsr_out[25]),
	.D(lfsr_out[24]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[26]  (
	.RN(resetn),
	.Q(lfsr_out[26]),
	.D(lfsr_out[25]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[27]  (
	.RN(resetn),
	.Q(lfsr_out[27]),
	.D(lfsr_out[26]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[23]  (
	.RN(resetn),
	.Q(lfsr_out[23]),
	.D(lfsr_out[22]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[0]  (
	.RN(resetn),
	.Q(lfsr_out[0]),
	.D(n3),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   DFFRXLTS \lfsr_out_reg[16]  (
	.RN(resetn),
	.Q(lfsr_out[16]),
	.D(lfsr_out[15]),
	.CK(clk__L1_N0), 
	.VDD(VDD), 
	.VSS(VSS));
   XOR2XLTS U6 (
	.Y(n7),
	.B(n6),
	.A(lfsr_out[0]), 
	.VDD(VDD), 
	.VSS(VSS));
   XOR2XLTS U7 (
	.Y(n6),
	.B(lfsr_out[23]),
	.A(lfsr_out[16]), 
	.VDD(VDD), 
	.VSS(VSS));
   XNOR2X1TS U17 (
	.Y(n3),
	.B(n7),
	.A(lfsr_out[27]), 
	.VDD(VDD), 
	.VSS(VSS));

   // Fillers and physical instances.
   FILL1TS IBM13RFLPVT_FILLER_impl1_60 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL4TS IBM13RFLPVT_FILLER_impl1_59 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL8TS IBM13RFLPVT_FILLER_impl1_58 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL16TS IBM13RFLPVT_FILLER_impl1_57 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL2TS IBM13RFLPVT_FILLER_impl1_56 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL8TS IBM13RFLPVT_FILLER_impl1_55 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL32TS IBM13RFLPVT_FILLER_impl1_54 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL2TS IBM13RFLPVT_FILLER_impl1_53 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL2TS IBM13RFLPVT_FILLER_impl1_52 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL4TS IBM13RFLPVT_FILLER_impl1_51 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL16TS IBM13RFLPVT_FILLER_impl1_50 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL4TS IBM13RFLPVT_FILLER_impl1_49 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL2TS IBM13RFLPVT_FILLER_impl1_48 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL2TS IBM13RFLPVT_FILLER_impl1_47 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL8TS IBM13RFLPVT_FILLER_impl1_46 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL4TS IBM13RFLPVT_FILLER_impl1_45 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL1TS IBM13RFLPVT_FILLER_impl1_44 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL4TS IBM13RFLPVT_FILLER_impl1_43 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL16TS IBM13RFLPVT_FILLER_impl1_42 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL1TS IBM13RFLPVT_FILLER_impl1_41 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL2TS IBM13RFLPVT_FILLER_impl1_40 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL1TS IBM13RFLPVT_FILLER_impl1_39 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL2TS IBM13RFLPVT_FILLER_impl1_38 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL1TS IBM13RFLPVT_FILLER_impl1_37 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL2TS IBM13RFLPVT_FILLER_impl1_36 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL8TS IBM13RFLPVT_FILLER_impl1_35 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL1TS IBM13RFLPVT_FILLER_impl1_34 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL2TS IBM13RFLPVT_FILLER_impl1_33 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL1TS IBM13RFLPVT_FILLER_impl1_32 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL2TS IBM13RFLPVT_FILLER_impl1_31 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL8TS IBM13RFLPVT_FILLER_impl1_30 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL2TS IBM13RFLPVT_FILLER_impl1_29 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL4TS IBM13RFLPVT_FILLER_impl1_28 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL1TS IBM13RFLPVT_FILLER_impl1_27 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL4TS IBM13RFLPVT_FILLER_impl1_26 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL1TS IBM13RFLPVT_FILLER_impl1_25 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL2TS IBM13RFLPVT_FILLER_impl1_24 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL1TS IBM13RFLPVT_FILLER_impl1_23 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL2TS IBM13RFLPVT_FILLER_impl1_22 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL8TS IBM13RFLPVT_FILLER_impl1_21 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL1TS IBM13RFLPVT_FILLER_impl1_20 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL4TS IBM13RFLPVT_FILLER_impl1_19 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL1TS IBM13RFLPVT_FILLER_impl1_18 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL2TS IBM13RFLPVT_FILLER_impl1_17 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL4TS IBM13RFLPVT_FILLER_impl1_16 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL2TS IBM13RFLPVT_FILLER_impl1_15 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL1TS IBM13RFLPVT_FILLER_impl1_14 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL4TS IBM13RFLPVT_FILLER_impl1_13 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL2TS IBM13RFLPVT_FILLER_impl1_12 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL4TS IBM13RFLPVT_FILLER_impl1_11 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL8TS IBM13RFLPVT_FILLER_impl1_10 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL1TS IBM13RFLPVT_FILLER_impl1_9 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL2TS IBM13RFLPVT_FILLER_impl1_8 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL1TS IBM13RFLPVT_FILLER_impl1_7 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL2TS IBM13RFLPVT_FILLER_impl1_6 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL2TS IBM13RFLPVT_FILLER_impl1_5 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL4TS IBM13RFLPVT_FILLER_impl1_4 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL16TS IBM13RFLPVT_FILLER_impl1_3 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL1TS IBM13RFLPVT_FILLER_impl1_2 (
	.VDD(VDD), 
	.VSS(VSS) );
   FILL2TS IBM13RFLPVT_FILLER_impl1_1 (
	.VDD(VDD), 
	.VSS(VSS) );
endmodule

